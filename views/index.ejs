<!doctype html>
<html>
<head>
    <title>Unity-chan!</title>
    <script src="../socket.io/socket.io.js"></script>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css"> <!-- load bootstrap css -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css"> <!-- load fontawesome -->
    <style>
        body        { padding-top:80px; }
    </style>
</head>
<body>
    <script type="text/javascript">
        var socket = io.connect('', {query: 'token=<%= token %>'}); // connection count should be increased by 1 at this point.

        var log_max = 10;
        var keyDict = {
            '32':'space', '39':'right', '37':'left', '38':'up', '40':'down', '17':'control', '13':'enter',
            '65':'a',
            '83':'s',
            '68':'d',
            '87':'w',
            '90':'z'
        };

        document.body.onkeydown = function(event) {
            if (keyDict.hasOwnProperty(event.which)){
                logUpdate('client', 'KEYDOWN: ' + keyDict[event.which] + '<br>');
            }
        };
        document.body.onkeyup = function(event) {
            if (keyDict.hasOwnProperty(event.which)){
                logUpdate('client', 'KEYUP: ' + keyDict[event.which] + '<br>'); // String.toUpperCase()
            }
        };

        /* MAIN LOGIC */
        socket.on('connectionInfo', function (data) {
            document.getElementById('mainMsgBox').innerHTML = 'Server connected<br>';

            // change keyboard event listener
            document.body.onkeydown = function(event) {
                if (keyDict.hasOwnProperty(event.which)){
                    logUpdate('client', 'KEYDOWN: ' + keyDict[event.which] + '<br>');
                    socket.emit('keyEvent', {key:keyDict[event.which], updown:'down'});
                }
            };
            document.body.onkeyup = function(event) {
                if (keyDict.hasOwnProperty(event.which)){
                    logUpdate('client', 'KEYUP: ' + keyDict[event.which] + '<br>'); // String.toUpperCase()
                    socket.emit('keyEvent', {key:keyDict[event.which], updown:'up'});
                }
            };

            // update connection Status
            document.getElementById('onGame').innerHTML = data.onGame;
            document.getElementById('connectionCount').innerHTML = data.connectionCount;
        });

        /* KEY EVENT */
        socket.on('keyEvent', function (data) {
            logUpdate('server', 'Keyboard input: '+data.key+ ' ' + data.updown+'<br>');
        });


        socket.on('disconnect', function (data) {
            if (data.message) {
                document.getElementById('mainMsgBox').innerHTML = 'Server disconnected(%s)<br>'.format(data.message);
            }
            else {
                document.getElementById('mainMsgBox').innerHTML = 'Server disconnected<br>';
            }
        });

        var logUpdate = function(container, text) {
            var tmp = document.getElementById(container).innerHTML + text;
            var log_count = (tmp.match(/<[ ]*[Bb][Rr][ ]*>/g) || []).length;
            if (log_count > log_max) {
                tmp = tmp.substring(tmp.search(/<[ ]*[Bb][Rr][ ]*>/));
                tmp = tmp.substring(tmp.search('>')+1);
            }
            document.getElementById(container).innerHTML = tmp;
        };

    </script>
<div class="container">

    <div class="jumbotron text-center">
        <h1><span class="fa fa-lock"></span> Unity-chan!</h1>


        <p> Hi! <%= nickname %> </p>
        <a href="/profile" class="btn btn-default"><span class="fa fa-user"></span> View Profile</a>
        <a href="/logout" class="btn btn-default"><span class="fa fa-times"></span> Logout</a>

        <br>
        <div class="row">
            <span id="mainMsgBox"></span>
        </div>
        <div class="row">
            <div class="col-sm-6">
                OnGame: <span id="onGame"><%= onGame %></span>
            </div>
            <div class="col-sm-6">
                ConnectionCount: <span id="connectionCount"><%= connectionCount %></span>
            </div>
        </div>
        <div class="row"> 
            <div class="col-sm-12 col-md-6">
                [Client side inputs] <br>
                <span id="client"></span>
            </div>
            <div class="col-sm-12 col-md-6">
                [Server received] (developing...) <br>
                <span id="server"></span>
            </div>
        </div>
    </div>

</div>
</body>
</html>